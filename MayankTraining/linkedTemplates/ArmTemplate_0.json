{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "MayankTraining"
		},
		"ls_CosmosDbMongoDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_CosmosDbMongoDb'"
		},
		"ls_csv_data_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_csv_data'"
		},
		"LSSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LSSqlServer'"
		},
		"LSSqlServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LSSqlServer'"
		},
		"ls_CosmosDbMongoDb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "cosmosdb"
		},
		"LSSqlServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "DESKTOP-UOC81NQ\\Mayank-PC"
		},
		"fileAdded_properties_pipeline2_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"fileAdded_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/730687e4-0d77-4c55-b101-7eb7996f2cd2/resourceGroups/RG_Azure_Training/providers/Microsoft.Storage/storageAccounts/satrainingazure"
		},
		"eventtrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/730687e4-0d77-4c55-b101-7eb7996f2cd2/resourceGroups/RG_Azure_Training/providers/Microsoft.Storage/storageAccounts/satrainingazure"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set FileName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vFileName",
							"value": {
								"value": "@replace(pipeline().parameters.FileName, '.csv', \nconcat(string(formatDateTime('yyyy-MM-dd', utcnow())),'.csv'))",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"variables": {
					"vFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-07T09:50:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://dummy.restapiexample.com/api/v1/employees",
							"method": "GET",
							"headers": {},
							"disableCertValidation": true
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-07-08T15:15:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_CosmosDbMongoDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('ls_CosmosDbMongoDb_connectionString')]",
					"database": "[parameters('ls_CosmosDbMongoDb_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_csv_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_csv_data_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-SelfHosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_CosmosDbMongoDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "collectionfirst"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_CosmosDbMongoDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DepartmentDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_csv_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "department.csv",
						"container": "containers-training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_csv_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_csv_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employee.csv",
						"container": "containers-training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "String"
					},
					{
						"name": "NationalIDNumber",
						"type": "String"
					},
					{
						"name": "LoginID",
						"type": "String"
					},
					{
						"name": "OrganizationNode",
						"type": "String"
					},
					{
						"name": "OrganizationLevel",
						"type": "String"
					},
					{
						"name": "JobTitle",
						"type": "String"
					},
					{
						"name": "BirthDate",
						"type": "String"
					},
					{
						"name": "MaritalStatus",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "HireDate",
						"type": "String"
					},
					{
						"name": "SalariedFlag",
						"type": "String"
					},
					{
						"name": "VacationHours",
						"type": "String"
					},
					{
						"name": "SickLeaveHours",
						"type": "String"
					},
					{
						"name": "CurrentFlag",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_csv_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_csv_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "jsondata.json",
						"container": "json-container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"feeds": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"title": {
										"type": "string"
									},
									"description": {
										"type": "string"
									},
									"location": {
										"type": "string"
									},
									"lng": {
										"type": "integer"
									},
									"lat": {
										"type": "integer"
									},
									"userId": {
										"type": "integer"
									},
									"name": {
										"type": "string"
									},
									"isdeleted": {
										"type": "boolean"
									},
									"profilePicture": {
										"type": "string"
									},
									"videoUrl": {
										"type": "null"
									},
									"images": {
										"type": "null"
									},
									"mediatype": {
										"type": "integer"
									},
									"imagePaths": {
										"type": "null"
									},
									"feedsComment": {
										"type": "null"
									},
									"commentCount": {
										"type": "integer"
									},
									"multiMedia": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"type": "integer"
												},
												"name": {
													"type": "string"
												},
												"description": {
													"type": "null"
												},
												"url": {
													"type": "string"
												},
												"mediatype": {
													"type": "integer"
												},
												"likeCount": {
													"type": "integer"
												},
												"place": {
													"type": "null"
												},
												"createAt": {
													"type": "string"
												}
											}
										}
									},
									"likeDislike": {
										"type": "object",
										"properties": {
											"likes": {
												"type": "integer"
											},
											"dislikes": {
												"type": "integer"
											},
											"userAction": {
												"type": "integer"
											}
										}
									},
									"createdAt": {
										"type": "string"
									},
									"code": {
										"type": "integer"
									},
									"msg": {
										"type": "null"
									}
								}
							}
						},
						"totalFeed": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_csv_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LSSqlServer_connectionString')]",
					"userName": "[parameters('LSSqlServer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LSSqlServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-SelfHosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SelfHosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fileAdded')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline2",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('fileAdded_properties_pipeline2_parameters_FileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/containers-training/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('fileAdded_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "csvTocosmosdb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "containers-training//employee.csv"
							},
							{
								"name": "Destination",
								"value": "collectionfirst"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbMongoDbApiSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"path": "id"
										}
									},
									{
										"source": {
											"path": "[['title']"
										},
										"sink": {
											"path": "title"
										}
									},
									{
										"source": {
											"path": "[['commentCount']"
										},
										"sink": {
											"path": "commmentCount"
										}
									}
								],
								"collectionReference": "$['feeds']"
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbMongoDbApiCollection1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-07-07T08:55:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbMongoDbApiCollection1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eventtrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/containers-training/blobs/output/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('eventtrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/scheduled')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2021-07-02T08:25:00Z",
						"endTime": "2021-07-03T08:25:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		}
	]
}